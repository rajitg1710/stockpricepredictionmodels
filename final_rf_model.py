# -*- coding: utf-8 -*-
"""FINAL RF Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eboJy3oRgQuCcarOYJqTtWN6RAjWNZoD
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestRegressor

df = pd.read_csv('MSFT_2015-2018.csv')
df = df.dropna()
df

df.plot(x = "Date", y = "Close")
plt.xticks(rotation = 45)

X = df.drop(['Date', 'Close'], axis = 1)
y = df['Close']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)

from sklearn.ensemble import RandomForestRegressor
rfr = RandomForestRegressor()
rfr.fit(X_train, y_train)

y_pred = rfr.predict(X_test)

from sklearn.metrics import mean_squared_error, r2_score
r2 = r2_score(y_test, y_pred)
r2

mse = mean_squared_error(y_test, y_pred)
mse

param_grid = {
    'n_estimators': [100, 200, 300],
    'max_depth': [None, 10, 20],
    'min_samples_split': [2, 5, 10],
    'min_samples_leaf': [1, 2, 4]
}

from sklearn.model_selection import GridSearchCV
rfr_cv = GridSearchCV(estimator = rfr, param_grid = param_grid, cv = 3, scoring = 'r2', n_jobs = -1, verbose = 2)

rfr_cv.fit(X_train, y_train)

y_pred = rfr_cv.predict(X_test)
r2 = r2_score(y_test, y_pred)
r2

mse = mean_squared_error(y_test, y_pred)
mse

print("Best Parameters:", rfr_cv.best_params_)
print("Best RÂ² Score (on CV):", rfr_cv.best_score_)

# Get the last available input row
latest_input = df[['Open', 'High', 'Low', 'Volume']].iloc[-1].to_frame().T

# Predict next closing price
next_close_price = rfr_cv.predict(latest_input)[0]

print(f"Predicted closing price for next day: ${next_close_price:.2f}")

